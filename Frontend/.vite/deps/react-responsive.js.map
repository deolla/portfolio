{
  "version": 3,
  "sources": ["../../node_modules/css-mediaquery/index.js", "../../node_modules/matchmediaquery/index.js", "../../node_modules/hyphenate-style-name/index.js", "../../node_modules/shallow-equal/src/arrays.ts", "../../node_modules/shallow-equal/src/objects.ts", "../../node_modules/shallow-equal/src/index.ts", "../../node_modules/react-responsive/src/mediaQuery.ts", "../../node_modules/react-responsive/src/toQuery.ts", "../../node_modules/react-responsive/src/Context.ts", "../../node_modules/react-responsive/src/useMediaQuery.ts", "../../node_modules/react-responsive/src/Component.ts"],
  "sourcesContent": ["/*\nCopyright (c) 2014, Yahoo! Inc. All rights reserved.\nCopyrights licensed under the New BSD License.\nSee the accompanying LICENSE file for terms.\n*/\n\n'use strict';\n\nexports.match = matchQuery;\nexports.parse = parseQuery;\n\n// -----------------------------------------------------------------------------\n\nvar RE_MEDIA_QUERY     = /(?:(only|not)?\\s*([^\\s\\(\\)]+)(?:\\s*and)?\\s*)?(.+)?/i,\n    RE_MQ_EXPRESSION   = /\\(\\s*([^\\s\\:\\)]+)\\s*(?:\\:\\s*([^\\s\\)]+))?\\s*\\)/,\n    RE_MQ_FEATURE      = /^(?:(min|max)-)?(.+)/,\n    RE_LENGTH_UNIT     = /(em|rem|px|cm|mm|in|pt|pc)?$/,\n    RE_RESOLUTION_UNIT = /(dpi|dpcm|dppx)?$/;\n\nfunction matchQuery(mediaQuery, values) {\n    return parseQuery(mediaQuery).some(function (query) {\n        var inverse = query.inverse;\n\n        // Either the parsed or specified `type` is \"all\", or the types must be\n        // equal for a match.\n        var typeMatch = query.type === 'all' || values.type === query.type;\n\n        // Quit early when `type` doesn't match, but take \"not\" into account.\n        if ((typeMatch && inverse) || !(typeMatch || inverse)) {\n            return false;\n        }\n\n        var expressionsMatch = query.expressions.every(function (expression) {\n            var feature  = expression.feature,\n                modifier = expression.modifier,\n                expValue = expression.value,\n                value    = values[feature];\n\n            // Missing or falsy values don't match.\n            if (!value) { return false; }\n\n            switch (feature) {\n                case 'orientation':\n                case 'scan':\n                    return value.toLowerCase() === expValue.toLowerCase();\n\n                case 'width':\n                case 'height':\n                case 'device-width':\n                case 'device-height':\n                    expValue = toPx(expValue);\n                    value    = toPx(value);\n                    break;\n\n                case 'resolution':\n                    expValue = toDpi(expValue);\n                    value    = toDpi(value);\n                    break;\n\n                case 'aspect-ratio':\n                case 'device-aspect-ratio':\n                case /* Deprecated */ 'device-pixel-ratio':\n                    expValue = toDecimal(expValue);\n                    value    = toDecimal(value);\n                    break;\n\n                case 'grid':\n                case 'color':\n                case 'color-index':\n                case 'monochrome':\n                    expValue = parseInt(expValue, 10) || 1;\n                    value    = parseInt(value, 10) || 0;\n                    break;\n            }\n\n            switch (modifier) {\n                case 'min': return value >= expValue;\n                case 'max': return value <= expValue;\n                default   : return value === expValue;\n            }\n        });\n\n        return (expressionsMatch && !inverse) || (!expressionsMatch && inverse);\n    });\n}\n\nfunction parseQuery(mediaQuery) {\n    return mediaQuery.split(',').map(function (query) {\n        query = query.trim();\n\n        var captures    = query.match(RE_MEDIA_QUERY),\n            modifier    = captures[1],\n            type        = captures[2],\n            expressions = captures[3] || '',\n            parsed      = {};\n\n        parsed.inverse = !!modifier && modifier.toLowerCase() === 'not';\n        parsed.type    = type ? type.toLowerCase() : 'all';\n\n        // Split expressions into a list.\n        expressions = expressions.match(/\\([^\\)]+\\)/g) || [];\n\n        parsed.expressions = expressions.map(function (expression) {\n            var captures = expression.match(RE_MQ_EXPRESSION),\n                feature  = captures[1].toLowerCase().match(RE_MQ_FEATURE);\n\n            return {\n                modifier: feature[1],\n                feature : feature[2],\n                value   : captures[2]\n            };\n        });\n\n        return parsed;\n    });\n}\n\n// -- Utilities ----------------------------------------------------------------\n\nfunction toDecimal(ratio) {\n    var decimal = Number(ratio),\n        numbers;\n\n    if (!decimal) {\n        numbers = ratio.match(/^(\\d+)\\s*\\/\\s*(\\d+)$/);\n        decimal = numbers[1] / numbers[2];\n    }\n\n    return decimal;\n}\n\nfunction toDpi(resolution) {\n    var value = parseFloat(resolution),\n        units = String(resolution).match(RE_RESOLUTION_UNIT)[1];\n\n    switch (units) {\n        case 'dpcm': return value / 2.54;\n        case 'dppx': return value * 96;\n        default    : return value;\n    }\n}\n\nfunction toPx(length) {\n    var value = parseFloat(length),\n        units = String(length).match(RE_LENGTH_UNIT)[1];\n\n    switch (units) {\n        case 'em' : return value * 16;\n        case 'rem': return value * 16;\n        case 'cm' : return value * 96 / 2.54;\n        case 'mm' : return value * 96 / 2.54 / 10;\n        case 'in' : return value * 96;\n        case 'pt' : return value * 72;\n        case 'pc' : return value * 72 / 12;\n        default   : return value;\n    }\n}\n", "'use strict';\n\nvar staticMatch = require('css-mediaquery').match;\nvar dynamicMatch = typeof window !== 'undefined' ? window.matchMedia : null;\n\n// our fake MediaQueryList\nfunction Mql(query, values, forceStatic){\n  var self = this;\n  var mql;\n\n  // matchMedia will return null in FF when it's called in a hidden iframe\n  // ref: https://stackoverflow.com/a/12330568\n  if(dynamicMatch && !forceStatic) mql = dynamicMatch.call(window, query);\n\n  if (mql) {\n    this.matches = mql.matches;\n    this.media = mql.media;\n    // TODO: is there a time it makes sense to remove this listener?\n    mql.addListener(update);\n  } else {\n    this.matches = staticMatch(query, values);\n    this.media = query;\n  }\n\n  this.addListener = addListener;\n  this.removeListener = removeListener;\n  this.dispose = dispose;\n\n  function addListener(listener){\n    if(mql){\n      mql.addListener(listener);\n    }\n  }\n\n  function removeListener(listener){\n    if(mql){\n      mql.removeListener(listener);\n    }\n  }\n\n  // update ourselves!\n  function update(evt){\n    self.matches = evt.matches;\n    self.media = evt.media;\n  }\n\n  function dispose(){\n    if(mql){\n      mql.removeListener(update);\n    }\n  }\n}\n\nfunction matchMedia(query, values, forceStatic){\n  return new Mql(query, values, forceStatic);\n}\n\nmodule.exports = matchMedia;\n", "/* eslint-disable no-var, prefer-template */\nvar uppercasePattern = /[A-Z]/g\nvar msPattern = /^ms-/\nvar cache = {}\n\nfunction toHyphenLower(match) {\n  return '-' + match.toLowerCase()\n}\n\nfunction hyphenateStyleName(name) {\n  if (cache.hasOwnProperty(name)) {\n    return cache[name]\n  }\n\n  var hName = name.replace(uppercasePattern, toHyphenLower)\n  return (cache[name] = msPattern.test(hName) ? '-' + hName : hName)\n}\n\nexport default hyphenateStyleName\n", "export type validArrayValue = any[] | null | undefined;\n\nexport default function shallowEqualArrays(\n  arrA: validArrayValue,\n  arrB: validArrayValue\n): boolean {\n  if (arrA === arrB) {\n    return true;\n  }\n\n  if (!arrA || !arrB) {\n    return false;\n  }\n\n  const len = arrA.length;\n\n  if (arrB.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    if (arrA[i] !== arrB[i]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "export type validObjectValue = Record<string, any> | null | undefined;\n\nexport default function shallowEqualObjects<T>(\n  objA: validObjectValue,\n  objB: validObjectValue\n): boolean {\n  if (objA === objB) {\n    return true;\n  }\n\n  if (!objA || !objB) {\n    return false;\n  }\n\n  const aKeys = Object.keys(objA);\n  const bKeys = Object.keys(objB);\n  const len = aKeys.length;\n\n  if (bKeys.length !== len) {\n    return false;\n  }\n\n  for (let i = 0; i < len; i++) {\n    const key = aKeys[i];\n\n    if (\n      objA[key] !== objB[key] ||\n      !Object.prototype.hasOwnProperty.call(objB, key)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n", "import shallowEqualArrays from \"./arrays\";\nimport shallowEqualObjects from \"./objects\";\n\ntype Comparable = Record<string, any> | any[] | null | undefined;\n\nfunction shallowEqual<T extends Comparable>(a: T, b: T): boolean {\n  const aIsArr = Array.isArray(a);\n  const bIsArr = Array.isArray(b);\n\n  if (aIsArr !== bIsArr) {\n    return false;\n  }\n\n  if (aIsArr && bIsArr) {\n    return shallowEqualArrays(a, b);\n  }\n\n  return shallowEqualObjects(a, b);\n}\n\nexport { shallowEqual, shallowEqualObjects, shallowEqualArrays };\n", "import PropTypes from 'prop-types'\n\nconst stringOrNumber = PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n\n// media types\nconst types = {\n  all: PropTypes.bool,\n  grid: PropTypes.bool,\n  aural: PropTypes.bool,\n  braille: PropTypes.bool,\n  handheld: PropTypes.bool,\n  print: PropTypes.bool,\n  projection: PropTypes.bool,\n  screen: PropTypes.bool,\n  tty: PropTypes.bool,\n  tv: PropTypes.bool,\n  embossed: PropTypes.bool\n}\n\n// properties that match media queries\nconst matchers = {\n  orientation: PropTypes.oneOf(['portrait', 'landscape']),\n\n  scan: PropTypes.oneOf(['progressive', 'interlace']),\n\n  aspectRatio: PropTypes.string,\n  deviceAspectRatio: PropTypes.string,\n\n  height: stringOrNumber,\n  deviceHeight: stringOrNumber,\n\n  width: stringOrNumber,\n  deviceWidth: stringOrNumber,\n\n  color: PropTypes.bool,\n\n  colorIndex: PropTypes.bool,\n\n  monochrome: PropTypes.bool,\n  resolution: stringOrNumber,\n  type: Object.keys(types)\n}\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst { type, ...featureMatchers } = matchers\n\n// media features\nconst features = {\n  minAspectRatio: PropTypes.string,\n  maxAspectRatio: PropTypes.string,\n  minDeviceAspectRatio: PropTypes.string,\n  maxDeviceAspectRatio: PropTypes.string,\n\n  minHeight: stringOrNumber,\n  maxHeight: stringOrNumber,\n  minDeviceHeight: stringOrNumber,\n  maxDeviceHeight: stringOrNumber,\n\n  minWidth: stringOrNumber,\n  maxWidth: stringOrNumber,\n  minDeviceWidth: stringOrNumber,\n  maxDeviceWidth: stringOrNumber,\n\n  minColor: PropTypes.number,\n  maxColor: PropTypes.number,\n\n  minColorIndex: PropTypes.number,\n  maxColorIndex: PropTypes.number,\n\n  minMonochrome: PropTypes.number,\n  maxMonochrome: PropTypes.number,\n\n  minResolution: stringOrNumber,\n  maxResolution: stringOrNumber,\n\n  ...featureMatchers\n}\n\nconst all = { ...types, ...features }\n\nexport default {\n  all: all,\n  types: types,\n  matchers: matchers,\n  features: features\n}\n", "import hyphenate from 'hyphenate-style-name'\nimport mq from './mediaQuery'\nimport { MediaQueryAllQueryable } from './types'\n\nconst negate = (cond: string) => `not ${cond}`\n\nconst keyVal = (k: string, v: unknown): string => {\n  const realKey = hyphenate(k)\n\n  // px shorthand\n  if (typeof v === 'number') {\n    v = `${v}px`\n  }\n  if (v === true) {\n    return realKey\n  }\n  if (v === false) {\n    return negate(realKey)\n  }\n  return `(${realKey}: ${v})`\n}\n\nconst join = (conds: string[]): string => conds.join(' and ')\n\nconst toQuery = (obj: Partial<MediaQueryAllQueryable>): string => {\n  const rules: string[] = []\n  Object.keys(mq.all).forEach((k) => {\n    const v = obj[k as keyof MediaQueryAllQueryable]\n    if (v != null) {\n      rules.push(keyVal(k, v))\n    }\n  })\n  return join(rules)\n}\n\nexport default toQuery\n", "import { createContext } from 'react'\nimport { MediaQueryAllQueryable } from './types'\n\nconst Context = createContext<Partial<MediaQueryAllQueryable> | undefined>(\n  undefined\n)\n\nexport default Context\n", "import { useRef, useEffect, useContext, useState } from 'react'\nimport matchMedia from 'matchmediaquery'\nimport hyphenate from 'hyphenate-style-name'\nimport { shallowEqualObjects } from 'shallow-equal'\nimport toQuery from './toQuery'\nimport Context from './Context'\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types'\n\ntype MediaQuerySettings = Partial<MediaQueryAllQueryable & { query?: string }>\ntype HyphenateKeyTypes = MediaQueryMatchers | MediaQueryAllQueryable\n\nconst makeQuery = (settings: MediaQuerySettings) =>\n  settings.query || toQuery(settings)\n\nconst hyphenateKeys = (obj?: HyphenateKeyTypes) => {\n  type K = keyof HyphenateKeyTypes\n\n  if (!obj) return undefined\n  const keys = Object.keys(obj) as K[]\n\n  return keys.reduce(\n    (result, key) => {\n      result[hyphenate(key)] = obj[key]\n      return result\n    },\n    {} as Record<string, (typeof obj)[K]>\n  )\n}\n\nconst useIsUpdate = () => {\n  const ref = useRef(false)\n\n  useEffect(() => {\n    ref.current = true\n  }, [])\n\n  return ref.current\n}\n\nconst useDevice = (\n  deviceFromProps?: MediaQueryMatchers\n): Partial<MediaQueryAllQueryable> | undefined => {\n  const deviceFromContext = useContext(Context)\n  const getDevice = () =>\n    hyphenateKeys(deviceFromProps) || hyphenateKeys(deviceFromContext)\n  const [device, setDevice] = useState(getDevice)\n\n  useEffect(() => {\n    const newDevice = getDevice()\n    if (!shallowEqualObjects(device, newDevice)) {\n      setDevice(newDevice)\n    }\n  }, [deviceFromProps, deviceFromContext])\n\n  return device\n}\n\nconst useQuery = (settings: MediaQuerySettings) => {\n  const getQuery = () => makeQuery(settings)\n  const [query, setQuery] = useState(getQuery)\n\n  useEffect(() => {\n    const newQuery = getQuery()\n    if (query !== newQuery) {\n      setQuery(newQuery)\n    }\n  }, [settings])\n\n  return query\n}\n\nconst useMatchMedia = (query: string, device?: MediaQueryMatchers) => {\n  const getMatchMedia = () => matchMedia(query, device || {}, !!device)\n  const [mq, setMq] = useState(getMatchMedia)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate) {\n      // skip on mounting, it has already been set\n      const newMq = getMatchMedia()\n      setMq(newMq)\n\n      return () => {\n        if (newMq) {\n          newMq.dispose()\n        }\n      }\n    }\n  }, [query, device])\n\n  return mq\n}\n\nconst useMatches = (mediaQuery: MediaQueryList): boolean => {\n  const [matches, setMatches] = useState<boolean>(mediaQuery.matches)\n\n  useEffect(() => {\n    const updateMatches = (ev: MediaQueryListEvent) => {\n      setMatches(ev.matches)\n    }\n    mediaQuery.addListener(updateMatches)\n    setMatches(mediaQuery.matches)\n\n    return () => {\n      mediaQuery.removeListener(updateMatches)\n    }\n  }, [mediaQuery])\n\n  return matches\n}\n\nconst useMediaQuery = (\n  settings: MediaQuerySettings,\n  device?: MediaQueryMatchers,\n  onChange?: (_: boolean) => void\n) => {\n  const deviceSettings = useDevice(device)\n  const query = useQuery(settings)\n  if (!query) throw new Error('Invalid or missing MediaQuery!')\n  const mq = useMatchMedia(query, deviceSettings)\n  const matches = useMatches(mq as unknown as MediaQueryList)\n  const isUpdate = useIsUpdate()\n\n  useEffect(() => {\n    if (isUpdate && onChange) {\n      onChange(matches)\n    }\n  }, [matches])\n\n  useEffect(\n    () => () => {\n      if (mq) {\n        mq.dispose()\n      }\n    },\n    []\n  )\n\n  return matches\n}\n\nexport default useMediaQuery\n", "import useMediaQuery from './useMediaQuery'\nimport { ReactNode, ReactElement, FC, CSSProperties } from 'react'\nimport { MediaQueryAllQueryable, MediaQueryMatchers } from './types'\n\ninterface MediaQueryProps extends MediaQueryAllQueryable {\n  component?: ReactNode\n  children?: ReactNode | ((matches: boolean) => ReactNode)\n  query?: string\n  style?: CSSProperties\n  className?: string\n  device?: MediaQueryMatchers\n  values?: Partial<MediaQueryMatchers>\n  onBeforeChange?: (_matches: boolean) => void\n  onChange?: (_matches: boolean) => void\n}\n\n// ReactNode and ReactElement typings are a little funky for functional components, so the ReactElement cast is needed on the return\nconst MediaQuery: FC<MediaQueryProps> = ({\n  children,\n  device,\n  onChange,\n  ...settings\n}) => {\n  const matches = useMediaQuery(settings, device, onChange)\n\n  if (typeof children === 'function') {\n    return children(matches) as ReactElement\n  }\n  return matches ? (children as ReactElement) : null\n}\n\nexport default MediaQuery\n"],
  "mappings": "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",
  "names": ["type", "captures", "matchMedia", "shallowEqualObjects", "objA", "objB", "aKeys", "Object", "keys", "bKeys", "len", "length", "i", "key", "prototype", "hasOwnProperty", "call", "PropTypes", "matchMedia", "mq"]
}
